---
nameOverride: ""
fullnameOverride: ""

# containerConfig: ""

previewServer:
  replicaCount: 1

  image:
    repository: gcr.io/cloud-tagging-10302018/gtm-cloud-image
    tag: stable

    pullPolicy: Always

  imagePullSecrets: []

  strategy:
    type: RollingUpdate

    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000

    capabilities:
      drop:
        - ALL

    readOnlyRootFilesystem: true

  livenessProbe:
    httpGet:
      path: /healthz
      port: http

  readinessProbe:
    httpGet:
      path: /healthz
      port: http

  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 250m
      memory: 64Mi

  environment: {}

  secretEnvironment: {}

  nodeSelector: {}

  affinity: {}

  tolerations: []

  serviceAccount:
    create: true

    annotations: {}

    name: ""

  service:
    type: ClusterIP

    port: 8080

    neg:
      enabled: false

  pdb:
    enabled: false

    maxUnavailable: 25%

  ingress:
    enabled: false

    className: ""

    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    tls:
      []
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

  frontendConfig:
    enabled: false

    # sslPolicy: ""

    redirectToHttps:
      {}
      # enabled: true
      # responseCodeName: MOVED_PERMANENTLY_DEFAULT

  backendConfig:
    enabled: false

    timeoutSec: 30

    healthCheck:
      {}
      # checkIntervalSec: 5
      # timeoutSec: 3
      # healthyThreshold: 1
      # unhealthyThreshold: 2
      # type: HTTP
      # requestPath: /healthz
      # port: 8080

    securityPolicy:
      {}
      # name: "example-security-policy"

  testConnection:
    internal:
      enabled: true
    external:
      enabled: true

serverSideTagging:
  replicaCount: 1

  image:
    repository: gcr.io/cloud-tagging-10302018/gtm-cloud-image
    tag: stable

    pullPolicy: Always

  imagePullSecrets: []

  strategy:
    type: RollingUpdate

    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%

  podAnnotations: {}

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000

    capabilities:
      drop:
        - ALL

    readOnlyRootFilesystem: true

  livenessProbe:
    httpGet:
      path: /healthz
      port: http

  readinessProbe:
    httpGet:
      path: /healthz
      port: http

  resources:
    limits:
      cpu: 750m
      memory: 128Mi
    requests:
      cpu: 250m
      memory: 64Mi

  # previewServerUrl: ""

  environment: {}

  secretEnvironment: {}

  nodeSelector: {}

  affinity: {}

  tolerations: []

  serviceAccount:
    create: true

    annotations: {}

    name: ""

  service:
    type: ClusterIP

    port: 8080

    neg:
      enabled: false

  pdb:
    enabled: false

    maxUnavailable: 25%

  autoscaling:
    enabled: false

    minReplicas: 1
    maxReplicas: 10

    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  ingress:
    enabled: false

    className: ""

    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific

    tls:
      []
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

  frontendConfig:
    enabled: false

    # sslPolicy: ""

    redirectToHttps:
      {}
      # enabled: true
      # responseCodeName: MOVED_PERMANENTLY_DEFAULT

  backendConfig:
    enabled: false

    timeoutSec: 30

    healthCheck:
      {}
      # checkIntervalSec: 5
      # timeoutSec: 3
      # healthyThreshold: 1
      # unhealthyThreshold: 2
      # type: HTTP
      # requestPath: /healthz
      # port: 8080

    securityPolicy:
      {}
      # name: "example-security-policy"

  testConnection:
    internal:
      enabled: true
    external:
      enabled: true
